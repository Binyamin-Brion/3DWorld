#version 440 core

layout (location = 0) in vec3 vertexPosition;
layout (location = 1) in vec2 inTextureCoordinates;
layout (location = 2) in vec3 instanceTranslation;

uniform mat4 projection;
uniform mat4 view;

uniform uint baseGridSectionID;
uniform uint gridSectionsPerWorldLength;
uniform uint gridSectionLength;
uniform uint surfaceCubesPerGridSection;

out vec2 textureCoordinates;

void main()
{
    uint gridSectionIdentifier = baseGridSectionID + gl_InstanceID / surfaceCubesPerGridSection;

    uint columnOffset = gridSectionIdentifier / gridSectionsPerWorldLength;

    uint rowOffset = gridSectionIdentifier - (columnOffset * gridSectionsPerWorldLength);

    vec3 adjustedVertex = vertexPosition;

    adjustedVertex.x += columnOffset * gridSectionLength + instanceTranslation.x;
    adjustedVertex.z += (rowOffset * gridSectionLength) + instanceTranslation.z;

    gl_Position = projection * view * vec4(adjustedVertex, 1.0);

    textureCoordinates = inTextureCoordinates;
}
